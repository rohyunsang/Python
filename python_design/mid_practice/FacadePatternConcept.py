# 퍼사드 패턴 (Facade Pattern)

# 디자인 패턴 중 구조 디자인 패턴 중 하나
# adapter, bridge, decoratro, facade ..ETC

# 구조 디자인 패턴은 객체와 클래스를 병합해 더 큰 구조를 만듦
# 객체의 관계를 더 쉽게 식별할 수 있는 디자인 패턴

# 퍼사드란 건물의 정면, 특히 보이는 쪽을 의미 복잡한 내부 시스템 로직을 감추고
# 클라이언트가 쉽게 시스템에 접근할 수 있도록 함.

# 클래스와 클래스 간의 관계가 복잡하여 동작 방식에 대해 이해하기 어려울 때 이를 단순하게
# 단순하게 만드는 디자인 패턴 

# 퍼사드 목적
# 클라이언트가 특정 작업을 수행할 떄 모든 관련 서브시스템에 요청하지 않고 메인 인터페이스 (퍼사드)
# 에만 요청을 보내면 됨
# 클라이언트와 다수의 서브 시스템들 간의 관계가 많을 경우 감소 시킴

# 퍼사드 패턴 장점
# 클라이언트와 서브 시스템의 연결을 느슨하게 만듦
# => 클라이언트와 서브 시스템 구현을 분리
# 서브 시스템에 접근하는 단일 통합 인터페이스를 제공(수정 불필요)
# 서브 시스템 구현의 유연성이 높아지고 클라이언트는 더 단순해짐 

